#include <iostream>
#include <locale.h>
#include "Circle.h"
/*
Разработать тип данных и набор процедур для работы с ним (не использовать конструкции ООП, желательно использовать язык С, использовать Git).

Во всех вариантах должен быть разработан комплексный тип данных и реализован набор процедур для работы с ним.
1) Процедура инициализации (Init);
2) Процедура ввода с клавиатуры (Read);
3) Процедура вывода на экран (Display);
4) Процедура сложения (Add), ее два аргумента и возвращаемое значение вашего типа данных. Что понимается под “сложением” поясняется в варианте задания;
5) Процедура по вашему варианту задания.
В main продемонстрировать работу с переменными данного типа.

Переделать задание 2 и 3 в стиле ООП (Использовать Git).

Процедуры Init, Read, Display, Add и по варианту, становятся методами класса.
Поля становятся закрытыми private, доступ к ним при необходимости осуществляется через открытые методы public.

*/

/*
Класс circle представляет собой окружность на плоскости и содержит 3 вещественных поля: координаты и радиус.
Реализовать методы , вычисляющий расстояние от  центра окружности до начала координат,  и “складывающий” две окружности.
В итоговой окружности радиусы складываются, а в качестве координат центра вычисляются средние значения координат аргументов.
*/

using namespace std;

int main() {
    setlocale(0, "");
    Circle circle1, circle2;
    int var;
    char exit = 0;
    while(exit == 0)
    {   cout << "\tЗадана окружность с координатами центра (x, y) и радиусом основания r.Имются функции для работы с данными этой фигуры:" << endl;
        cout << "1)Read(Ввод данных треугольника с клавиатуры)" << endl;
        cout << "2)Display(Вывод данных треугольника на экран)" << endl;
        cout << "3)Add(сложение двух фигур. результат первая фигура)" << endl;
        cout << "4)Расстояние от начала системы координат до центра окружности" << endl;
        cout << "5)Выход" << endl;
        cin >> var;
        switch(var){
            case 1: circle1.Read();
                    break;
            case 2: circle1.Display();
                    break;
            case 3: cout << "\tВведите данные второго треугольника" << endl;
                    circle2.Read();
                    circle1.Add(circle2);
                    break;
            case 4: cout << "Расстояние от начала системы координат до центра окружности = " << circle1.lenToCenterOfCircle() << endl;
                    break;
            default:exit = 1;
        };
    }
    return 0;
}
